// Generated by gencpp from file lidar_ros_task/lidar.msg
// DO NOT EDIT!


#ifndef LIDAR_ROS_TASK_MESSAGE_LIDAR_H
#define LIDAR_ROS_TASK_MESSAGE_LIDAR_H

#include <ros/service_traits.h>


#include <lidar_ros_task/lidarRequest.h>
#include <lidar_ros_task/lidarResponse.h>


namespace lidar_ros_task
{

struct lidar
{

typedef lidarRequest Request;
typedef lidarResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct lidar
} // namespace lidar_ros_task


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lidar_ros_task::lidar > {
  static const char* value()
  {
    return "876c4429855d6020f9989528c5e136d4";
  }

  static const char* value(const ::lidar_ros_task::lidar&) { return value(); }
};

template<>
struct DataType< ::lidar_ros_task::lidar > {
  static const char* value()
  {
    return "lidar_ros_task/lidar";
  }

  static const char* value(const ::lidar_ros_task::lidar&) { return value(); }
};


// service_traits::MD5Sum< ::lidar_ros_task::lidarRequest> should match
// service_traits::MD5Sum< ::lidar_ros_task::lidar >
template<>
struct MD5Sum< ::lidar_ros_task::lidarRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lidar_ros_task::lidar >::value();
  }
  static const char* value(const ::lidar_ros_task::lidarRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lidar_ros_task::lidarRequest> should match
// service_traits::DataType< ::lidar_ros_task::lidar >
template<>
struct DataType< ::lidar_ros_task::lidarRequest>
{
  static const char* value()
  {
    return DataType< ::lidar_ros_task::lidar >::value();
  }
  static const char* value(const ::lidar_ros_task::lidarRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lidar_ros_task::lidarResponse> should match
// service_traits::MD5Sum< ::lidar_ros_task::lidar >
template<>
struct MD5Sum< ::lidar_ros_task::lidarResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lidar_ros_task::lidar >::value();
  }
  static const char* value(const ::lidar_ros_task::lidarResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lidar_ros_task::lidarResponse> should match
// service_traits::DataType< ::lidar_ros_task::lidar >
template<>
struct DataType< ::lidar_ros_task::lidarResponse>
{
  static const char* value()
  {
    return DataType< ::lidar_ros_task::lidar >::value();
  }
  static const char* value(const ::lidar_ros_task::lidarResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LIDAR_ROS_TASK_MESSAGE_LIDAR_H
